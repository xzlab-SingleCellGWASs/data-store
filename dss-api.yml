swagger: '2.0'
info:
  title: HCA DCP DSS API
  description: Human Cell Atlas Data Coordination Platform Data Storage System API
  version: "0.0.1"
host: {{API_DOMAIN_NAME}}
schemes:
  - https
basePath: /v1
produces:
  - application/json
securityDefinitions:
  googAuth:
    type: oauth2
    flow: implicit
    authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
    x-tokenInfoUrl: https://www.googleapis.com/oauth2/v3/tokeninfo
    scopes:
      https://www.googleapis.com/auth/userinfo.email: read user email
paths:
  /search:
    post:
      description: |
        Accepts Elasticsearch JSON query and returns matching bundle identifiers

        **Pagination**

        The DSS API supports pagination in a manner consistent with the
        [GitHub API](https://developer.github.com/v3/guides/traversing-with-pagination/), which is based on
        [RFC 5988](https://tools.ietf.org/html/rfc5988). When the results of an API call exceed the page size
        specified, the HTTP response will contain a `Link` header of the following form:
        `Link: <https://dss.data.humancellatlas.org/v1/search?replica=aws&per_page=100&_scroll_id=123>; rel="next"`.
        The URL in the header refers to the next page of the results to be fetched; if no `Link rel="next"` URL is
        included, then all results have been fetched. The client should recognize and parse the `Link` header
        appropriately according to RFC 5988, and retrieve the next page if requested by the user, or if all results
        are being retrieved.
      summary: |
        Find bundles by searching their metadata with an Elasticsearch query
      parameters:
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              es_query:
                description: Elasticsearch query
                type: object
            required:
              - es_query
        - name: output_format
          in: query
          description: |
            Specifies the output format. The default format, `summary`, is a list of UUIDs for bundles that match
            the query. Set this parameter to `raw` to get the verbatim JSON metadata for bundles that match the query.
          required: false
          type: string
          enum: [summary, raw]
          default: summary
        - name: replica
          in: query
          description: Replica to search.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: per_page
          in: query
          description: Max number of results to return per page.
          required: false
          type: integer
          format: int32
          minimum: 10
          maximum: 500
          default: 100
        - name: _scroll_id
          in: query
          description: |
            **Scroll-Search-Context**.
            An internal state pointer parameter for use with pagination. This parameter is referenced by the `Link`
            header as described in the "Pagination" section. The API client should not need to set this parameter
            directly; it should instead directly fetch the URL given in the `Link` header.
          required: false
          type: string
      responses:
        200:
          description: All results retrieved.
          schema:
            $ref: '#/definitions/SearchResult'
        206:
          description: A single page of results was retrieved.
          schema:
            $ref: '#/definitions/SearchResult'
          headers:
            Link:
              type: string
              description: URL to retrieve the next page of results.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /files/{uuid}:
    head:
      summary: Retrieve a file's metadata given an UUID and optionally a version.
      description: |
        Given a file UUID, return the metadata for the latest version of that file.  If the version is provided, that
        version's metadata is returned instead.  The metadata is returned in the headers.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the file.
          required: true
          type: string
        - name: replica
          in: query
          description: Replica to fetch from.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
      responses:
        200:
          description: Returns metadata
          headers:
            # edits to here should probably be reflected in the 302 section immediately below.
            X-DSS-BUNDLE-UUID:
              description: A RFC4122-compliant ID for the bundle that contains this file.
              type: string
            X-DSS-CREATOR-UID:
              description: User ID who created this file.
              type: integer
              format: int64
            X-DSS-VERSION:
              description: Timestamp of file creation in RFC3339.
              type: string
              format: date-time
            X-DSS-CONTENT-TYPE:
              description: Content-type of the file.
              type: string
            X-DSS-SIZE:
              description: File size (bytes).
              type: integer
              format: int64
            X-DSS-CRC32C:
              description: CRC-32C (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{8}$"
            X-DSS-S3-ETAG:
              description: S3 ETag (in hex format) of the file contents.
              type: string
              pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
            X-DSS-SHA1:
              description: SHA-1 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{40}$"
            X-DSS-SHA256:
              description: SHA-256 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{64}$"
    get:
      summary: Retrieve a file given a UUID and optionally a version.
      description: |
        Given a file UUID, return the latest version of that file.  If the version is provided, that version of the file
        is returned instead.

        Headers will contain the data store metadata for the file.

        This endpoint returns a HTTP redirect to another HTTP endpoint with the file contents.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the file.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to fetch from.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
      responses:
        301:
          description: Handle asynchronously, downstream users are expected to retry later.
          headers:
            Retry-After:
              description: Delay in seconds, downstream users are expected to retry after the delay.
              type: integer
              format: int64
        302:
          description: Redirects to a signed URL with the data.
          headers:
            # edits to here should probably be reflected in the 200 section above.
            X-DSS-BUNDLE-UUID:
              description: A RFC4122-compliant ID for the bundle that contains this file.
              type: string
            X-DSS-CREATOR-UID:
              description: User ID who created this file.
              type: integer
              format: int64
            X-DSS-VERSION:
              description: Timestamp of file creation in RFC3339.
              type: string
              format: date-time
            X-DSS-CONTENT-TYPE:
              description: Content-type of the file.
              type: string
            X-DSS-SIZE:
              description: File size (bytes).
              type: integer
              format: int64
            X-DSS-CRC32C:
              description: CRC-32C (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{8}$"
            X-DSS-S3-ETAG:
              description: S3 ETag (in hex format) of the file contents.
              type: string
              pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
            X-DSS-SHA1:
              description: SHA-1 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{40}$"
            X-DSS-SHA256:
              description: SHA-256 (in hex format) of the file contents in hex.
              type: string
              pattern: "^[a-z0-9]{64}$"
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, not_found]
                required:
                  - code
    put:
      summary: Create a new version of a file
      description: |
        Create a new version of a file with a given UUID. The contents of the file are provided by the client by
        reference using a cloud object storage URL. The file on the cloud object storage service must have metadata set
        listing the file checksums and content-type.

        The metadata fields required are:

        - hca-dss-sha256: SHA-256 checksum of the file
        - hca-dss-sha1: SHA-1 checksum of the file
        - hca-dss-s3_etag: S3 ETAG checksum of the file.  See
        https://stackoverflow.com/questions/12186993/what-is-the-algorithm-to-compute-the-amazon-s3-etag-for-a-file-larger-than-5gb
        for the general algorithm for how checksum is calculated.  For files smaller than 64MB, this is the MD5 checksum
        of the file.  For files larger than 64MB but smaller than 640,000MB, we use 64MB chunks.  For files larger than
        640,000MB, we use a chunk size equal to the total file size divided by 10000, rounded up to the nearest MB.
        MB, in this section, refers to 1,048,576 bytes.  Note that 640,000MB is not the same as 640GB!
        - hca-dss-crc32c: CRC-32C checksum of the file
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the file.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              source_url:
                description: Cloud URL for source data.
                type: string
                pattern: "^(gs|s3|wasb)://"
              bundle_uuid:
                description: A RFC4122-compliant ID for the bundle that contains this file.
                type: string
              creator_uid:
                description: User ID who is creating this file.
                type: integer
                format: int64
            required:
              - source_url
              - bundle_uuid
              - creator_uid
      responses:
        200:
          description: Returned when the file is already present and is identical to the file being uploaded.
          schema:
            type: object
            properties:
              version:
                description: Timestamp of file creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
        201:
          description: Returned when the file is successfully copied.
          schema:
            type: object
            properties:
              version:
                description: Timestamp of file creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
        202:
          description: Returned when the file has been queued up for copying.
          schema:
            type: object
            properties:
              version:
                description: Timestamp of file creation in RFC3339.
                type: string
                format: date-time
              task_id:
                description: ID for the task responsible for managing the copy.
                type: string
                pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
            required:
              - version
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, unknown_source_schema, file_already_exists]
                required:
                  - code
  /subscriptions:
    get:
      summary: Retrieve a user\'s event subscriptions.
      description: |
        Return a list of associated subscriptions.
      operationId: dss.api.subscriptions.find
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: replica
          in: query
          description: Replica to fetch from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              subscriptions:
                type: array
                items:
                  $ref: "#/definitions/Subscription"
            required:
              - subscriptions
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem]
                required:
                  - code
    put:
      summary: Create a event subscription.
      description: |
        Register an HTTP endpoint that is to be notified when a given event occurs.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: replica
          in: query
          description: Replica to write to. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              es_query:
                description: |
                  An Elasticsearch query for restricting the set of bundles for which this subscription's endpoint is notified.
                  A notification request will only be made for newly indexed bundles that match the given query.
                type: object
              endpoint:
                $ref: "#/definitions/NotificationEndpoint"
              hmac_secret_key:
                description: |
                  The key for signing requests to the endpoint's URL. The signature will be constructed according to
                  https://tools.ietf.org/html/draft-cavage-http-signatures and transmitted in the HTTP `Authorization`
                  header.
                type: string
              hmac_key_id:
                description: |
                  An optional key ID to use with `hmac_secret_key`.
                type: string
            required:
              - es_query
              - endpoint
            additionalProperties: false
      responses:
        201:
          description: OK
          schema:
            type: object
            properties:
              uuid:
                description: A RFC4122-compliant ID for the subscription.
                type: string
                pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
            required:
              - uuid
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, elasticsearch_error]
                required:
                  - code
  /subscriptions/{uuid}:
    get:
      summary: Retrieve an event subscription given a UUID.
      description: |
        Given a subscription UUID, return the associated subscription.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the subscription.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to fetch from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              subscription:
                $ref: "#/definitions/Subscription"
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, not_found]
                required:
                  - code
    delete:
      summary: Delete an event subscription.
      description: |
        Delete a registered event subscription. The associated query will no longer trigger a callback
        if a matching document is added to the system.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the subscription.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to delete from. Can be one of aws, gcp, or azure.
          required: true
          type: string
          enum: [aws, gcp, azure]
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              timeDeleted:
                description: Timestamp of query subscription deletion in RFC3339.
                type: string
                format: date-time
            required:
              - timeDeleted
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, Forbidden, OAuthResponseProblem, not_found]
                required:
                  - code
  /bundles/{uuid}:
    get:
      summary: Retrieve a bundle given a UUID and optionally a version.
      description: |
        Given a bundle UUID, return the latest version of that bundle.  If the version is provided, that version of the
        bundle is returned instead.
      parameters:
        - name: uuid
          in: path
          description: Bundle unique ID.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of bundle creation in RFC3339.
          required: false
          type: string
          format: date-time
        - name: replica
          in: query
          description: Replica to fetch from.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: directurls
          in: query
          description: Include direct-access URLs in the response.
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              bundle:
                $ref: "#/definitions/bundle_version"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Create a bundle
      description: |
        Create a new version of a bundle with a given UUID.  The list of file UUID+versions to be included must be
        provided.
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the bundle.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of bundle creation in RFC3339.
          required: false
          type: string
          format: date-time
        - name: replica
          in: query
          description: Replica to write to.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      description: A RFC4122-compliant ID for the file.
                      type: string
                      pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
                    version:
                      description: Timestamp of file creation in RFC3339.
                      type: string
                      format: date-time
                    name:
                      description: Name of the file.
                      type: string
                      pattern: "^[^/\\\\]+$"
                    indexed:
                      description: True iff this file should be indexed.
                      type: boolean
                  required:
                    - uuid
                    - version
                    - name
                    - indexed
              creator_uid:
                description: User ID who is creating this bundle.
                type: integer
                format: int64
            required:
              - files
              - creator_uid
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              version:
                description: Timestamp of bundle creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
        201:
          description: OK
          schema:
            type: object
            properties:
              version:
                description: Timestamp of bundle creation in RFC3339.
                type: string
                format: date-time
            required:
              - version
        409:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: |
                      Machine-readable error code.  The types of return values should not be changed lightly.

                      The code `bundle_already_exists` indicates that the bundle+version already exists, and has
                      different contents than this request would generate.

                      The code `file_missing` indicates that one of the files does not exist on the cloud provider.
                      Because the storage backend only guarantees eventual consistency, it may be desirable to retry
                      requests that return this error code.

                      The code `incorrect_file_bundle_uuid` indicates that the value of the file metadata field
                      bundle_uuid does not match the uuid of the bundle.
                    enum: [bundle_already_exists, file_missing, incorrect_file_bundle_uuid]
                required:
                  - code
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, bundle_already_exists]
                required:
                  - code
    delete:
      summary: Delete a bundle or a specific bundle version
      description: |
        Delete the bundle with the given UUID. This deletion is applied across replicas.
      security:
        - googAuth:
            - https://www.googleapis.com/auth/userinfo.email
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the bundle.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: replica
          in: query
          description: Replica to write to.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: version
          in: query
          description: Timestamp of bundle creation in RFC3339.
          required: false
          type: string
          format: date-time
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              reason:
                description: User-friendly reason for the bundle or timestamp-specfic bundle deletion.
                type: string
            required:
              - reason
      responses:
        200:
          description: OK
          schema:
            type: object
        403:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [forbidden]
                required:
                  - code
        409:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [bundle_tombstone_already_exists]
                required:
                  - code
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments]
                required:
                  - code
  /bundles/{uuid}/checkout:
    post:
      summary: Check out a bundle to DSS-managed or user-managed cloud object storage destination
      description: |
        Initiate asynchronous checkout of a bundle. The response JSON contains a field, `checkout_job_id`, that can be
        used to query the status of the checkout via the `GET /bundles/checkout/{checkout_job_id}` API method.
        FIXME: document the error code returned when the bundle or specified version does not exist.
        TODO: After some time period, the data will be removed.
        TBD: This could be based on initial checkout time or last access time.
      operationId: dss.api.bundles.checkout.post
      parameters:
        - name: uuid
          in: path
          description: A RFC4122-compliant ID for the bundle.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: version
          in: query
          description: Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.
          required: false
          type: string
          format: date-time
        - name: replica
          in: query
          description: Replica to fetch from.
          required: true
          type: string
          enum: [aws, gcp, azure]
        - name: json_request_body
          in: body
          required: false
          schema:
            type: object
            properties:
              email:
                description: An email address to send status updates to.
                type: string
                format: email
              destination:
                description: User-owned destination storage bucket.
                type: string
      responses:
        200:
          description: Returned when the bundle UUID with optionally specified version exists and checkout has been initiated.
          schema:
            type: object
            properties:
              checkout_job_id:
                description: A RFC4122-compliant ID for the checkout job request.
                pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
                type: string
            required:
              - checkout_job_id
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, not_found]
                required:
                  - code

  /bundles/checkout/{checkout_job_id}:
    get:
      summary: Check the status of a checkout request.
      description: |
        Use this route with the `checkout_job_id` identifier returned by `POST /bundles/{uuid}/checkout`.
      operationId: dss.api.bundles.checkout.get
      parameters:
        - name: checkout_job_id
          in: path
          description: A RFC4122-compliant ID for the checkout job request.
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
          required: true
          type: string
      responses:
        200:
          description: Returned when a checkout request for the checkout job id exists.
          schema:
            type: object
            properties:
              status:
                description: Status of the checkout request.
                type: string
                enum: [RUNNING, SUCCEEDED, FAILED, UNKNOWN_JOB_ID]
              cause:
                description: Human readable description of the error, returned for FAILED status only.
                type: string
            required:
              - status
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
              - type: object
                properties:
                  code:
                    type: string
                    description: Machine-readable error code.  The types of return values should not be changed lightly.
                    enum: [unhandled_exception, illegal_arguments, not_found]
                  message:
                    type: string
                    description: Detailed error message.
                required:
                  - code

definitions:
  File:
    type: object
    properties:
      uuid:
        type: string
        description: File unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      name:
        type: string
        description: Filename (unique within a bundle)
      versions:
        type: array
        description: List of versions
        items:
          type: string
    required:
      - uuid
      - name
      - versions
  blob_common_metadata:
    type: object
    description: Common fields between the files list of a bundle and the metadata tracking an unique file.
    properties:
      uuid:
        type: string
        description: A RFC4122-compliant ID for the file.
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      version:
        type: string
        format: date-time
        description: Timestamp of bundle creation in RFC3339.
      size:
        type: integer
        format: int64
        description: File size (bytes).
      crc32c:
        type: string
        description: CRC-32C (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{8}$"
      s3_etag:
        type: string
        description: S3 ETag (in hex format) of the file contents.
        pattern: "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$"
      sha1:
        type: string
        description: SHA-1 (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{40}$"
      sha256:
        type: string
        description: SHA-256 (in hex format) of the file contents in hex.
        pattern: "^[a-z0-9]{64}$"
    required:
      - uuid
      - version
      - size
      - crc32c
      - s3_etag
      - sha1
      - sha256
  file_version:
    type: object
    description: Object describing a single file in the files list of a bundle.
    allOf:
      - $ref: '#/definitions/blob_common_metadata'
      - type: object
        properties:
          name:
            type: string
            description: Filename (unique within a bundle)
          content-type:
            type: string
            description: Content-type of the file.
          indexed:
            type: boolean
            description: True if this file is to be indexed.
          url:
            description: Direct access URL, if requested.
            type: string
        required:
          - name
          - content-type
          - indexed
  file_metadata:
    type: object
    description: Object describing a single file in the files list of a bundle.
    allOf:
      - $ref: '#/definitions/blob_common_metadata'
      - type: object
        properties:
          version:
            type: string
            description: Version of the file metadata object.
          bundle_uuid:
            type: string
            description: A RFC4122-compliant ID for the bundle that contains this file.
            pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          creator_uid:
            type: integer
            format: int64
            description: User ID who created this file.
        required:
          - version
          - bundle_uuid
          - creator_uid
  Bundle:
    type: object
    properties:
      uuid:
        type: string
        description: Bundle unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      versions:
        type: array
        items:
          type: string
          format: date-time
          description: Timestamp of bundle creation in RFC3339.
    required:
      - uuid
      - versions
  NotificationEndpoint:
    type: object
    properties:
      url:
        description: The URL which an HTTP request is sent to when DSS delivers a notification to this endpoint.
        type: string
        pattern: 'https?://'
      method:
        description: The HTTP request method to use when DSS delivers a notification to this endpoint.
        enum: [POST, PUT]
      encoding:
        enum:
          - application/json
          - multipart/form-data
        description: >
          The MIME type describing the encoding of the request body
          * `application/json` - the HTTP request body is the notification payload as JSON
          * `multipart/form-data` - the HTTP request body is a list of form fields, each consisting of a name and a
            corresponding value. See https://tools.ietf.org/html/rfc7578 for details on this encoding. The actual
            notification payload will be placed as JSON into a field of the name specified via `payload_form_field`.
      form_fields:
        description: |
          A collection of static form fields to be supplied in the notification request body, alongside the actual
          notification payload. The value of each field must be a string. For example, if, at subscription time, this
          property is set to `{"foo" : "bar"}` then the HTTP request body at notification time would contain

          ```
          --2769baffc4f24cbc83ced26aa0c2f712
          Content-Disposition: form-data; name="foo"

          bar
          Content-Disposition: form-data; name="payload"

          {"transaction_id": "301c9079-3b20-4311-a131-bcda9b7f08ba", "subscription_id": ...
          --2769baffc4f24cbc83ced26aa0c2f712--
          ```

          Since the type of this property is `object`, multi-valued fields are not supported. This property is ignored
          unless `encoding` is `multipart/form-data`.
        type: object
        additionalProperties:
          type: string
      payload_form_field:
        description: |
          The name of the form field that will hold the notification payload when the request is made. If the default
          name of the payload field collides with that of a field in `form_fields`, this porperty can be used to rename
          the payload and avoid the collision. This property is ignored unless `encoding` is `multipart/form-data`.
        type: string
        default: payload
    required:
      - url
      - method
      - encoding
  Subscription:
    type: object
    properties:
      uuid:
        type: string
        description: Uniquely identifies this susbscription.
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      replica:
        description: |
          The DSS replica to subscribe to. When a new bundle is indexed in a particular replica, only subscriptions for
          that same replica are notified.
        type: string
        enum: [aws, gcp, azure]
      owner:
        type: string
        format: email
        description: The email of the user who created this subscription.
      endpoint:
        description: |
          Describes the specifics of the HTTP request that is made in order to deliver a notification for this
          subscription.
        $ref: "#/definitions/NotificationEndpoint"
      es_query:
        description: |
          An Elasticsearch query for restricting the set of bundles for which this subscription's endpoint is notified.
          A notification request will only be made for newly indexed bundles that match the given query.
        type: object
    required:
      - uuid
      - replica
      - owner
      - endpoint
      - es_query
  bundle_version:
    type: object
    properties:
      uuid:
        type: string
        description: Bundle unique ID
        pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      version:
        type: string
        format: date-time
        description: Timestamp of bundle creation in RFC3339.
      files:
        type: array
        items:
          $ref: "#/definitions/file_version"
      creator_uid:
        type: integer
        format: int
        description: User ID who created this bundle manifest.
  SearchResult:
    type: object
    properties:
      es_query:
        description: Elasticsearch query used to produce the results.
        type: object
      results:
        description: Results matching the `es_query`.
        type: array
      total_hits:
        description: The total number of matching results found.
        type: integer
  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
        description: HTTP error code.
      code:
        type: string
        description: |
          Machine-readable error code.  The types of return values should not be changed lightly.  Individual endpoints
          should list an enumeration of possible return codes.  All endpoints should expect the possibility of the
          return code `unhandled_exception` and `illegal_arguments`.
      title:
        type: string
        description: Human-readable error code.
      stacktrace:
        type: string
        description: Exception stacktrace, if any.
    required:
      # once we fix up all the existing endpoints, we can add 'code' to the set of required fields.
      - title
  FilesGetResponse:
    type: object
    properties:
      files:
        type: string

